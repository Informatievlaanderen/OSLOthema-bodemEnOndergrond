name: Convert the EAP file to JSON-ld

on:
  workflow_dispatch:
    inputs:
      config-file:
        description: "Name of the config file. Example: mijn-applicatieprofiel-ap.json"
        required: true

jobs:
  convert-eap:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # Different Node versions. Each node version will trigger the action
        node-version:
          - 20.x
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install all required dependencies
        run: |
          npm install @oslo-flanders/ea-converter
          npm install @oslo-flanders/stakeholders-converter
          npm install @oslo-flanders/json-webuniversum-generator
          npm install @oslo-flanders/html-generator
          npm install jsonfile
          npm install jsonld
          npm install nunjucks
          npm install collections

      # Fetch the required keys from the configuration file
      - name: Read key from configuration file
        id: read-config
        run: |
          diagram=$(jq -r '.[0].diagram' config/${{ github.event.inputs.config-file }})

          uml=$(jq -r '.[0].eap' config/${{ github.event.inputs.config-file }})

          type=$(jq -r '.[0].type' config/${{ github.event.inputs.config-file }})
          if [ "$type" = "ap" ]; then
          type="ApplicationProfile"
          elif [ "$type" = "voc" ]; then
          type="Vocabulary"
          fi

          echo "diagramName=$diagram" >> "$GITHUB_OUTPUT"
          echo "umlFile=$uml" >> "$GITHUB_OUTPUT"
          echo "specificationType=$type" >> "$GITHUB_OUTPUT"

      # Run the converter
      - name: Run oslo-converter-ea
        id: run-converter
        run: |
          npx oslo-converter-ea --umlFile ${{ steps.read-config.outputs.umlFile }} --diagramName ${{ steps.read-config.outputs.diagramName }} --specificationType ${{ steps.read-config.outputs.specificationType }} --versionId test/1 --publicationEnvironment https://data.vlaanderen.be --debug true 2>&1 | tee output.log
          cat output.log
          cat output.log >> "$GITHUB_STEP_SUMMARY"
          if grep -i "error" output.log; then
            echo "Error found in ea-converter workflow output"
            exit 1
          fi
      - name: Check if report.jsonld exists
        run: |
          if [ -f ./report.jsonld ]; then
            echo "report.jsonld exists."
          else
            echo "report.jsonld does not exist."
            exit 1
          fi
      # Run the stakeholders converter
      - name: Run oslo-stakeholders-converter
        id: run-stakeholders-converter
        run: |
          npx oslo-stakeholders-converter --input stakeholders.csv 2>&1 | tee stakeholders.log
          cat stakeholders.log
          cat stakeholders.log >> "$GITHUB_STEP_SUMMARY"
          if grep -i "error" stakeholders.log; then
            echo "Error found in stakeholders workflow output"
            exit 1
          fi

      # Run the json-webuniversum-generator
      - name: Run oslo-webuniversum-json-generator
        id: run-json-webuniversum-generator
        run: |
          npx oslo-webuniversum-json-generator --input report.jsonld --language nl --publicationEnvironment https://data.vlaanderen.be --output webuniversum-config.json 2>&1 | tee webuniversum.log
          cat webuniversum.log
          cat webuniversum.log >> "$GITHUB_STEP_SUMMARY"
          if grep -i "error" webuniversum.log; then
            echo "Error found in json-webuniversum-generator workflow output"
            exit 1
          fi

      # Create metadata from json
      - name: Create metadata.json from webuniversum-config.json
        run: |
          curl -o linkeddataparser3.js https://raw.githubusercontent.com/Informatievlaanderen/OSLO-SpecificationGenerator/refs/heads/dev4.0/linkeddataparser3.js
          curl -o html-metadata-generator.js https://raw.githubusercontent.com/Informatievlaanderen/OSLO-SpecificationGenerator/refs/heads/dev4.0/html-metadata-generator.js
          curl -o uris.js https://raw.githubusercontent.com/Informatievlaanderen/OSLO-SpecificationGenerator/refs/heads/dev4.0/html-metadata-generator.js
          node html-metadata-generator.js -i report.jsonld -g nl -m nl -h data.vlaanderen.be -r / -u data.vlaanderen.be -o metadata.json 2>&1 | tee metadata.log
          cat metadata.log
          cat metadata.log >> "$GITHUB_STEP_SUMMARY"
          if grep -i "error" metadata.log; then
            echo "Error found in metadata-generator workflow output"
            exit 1
          fi

      # run the html-generator
      - name: Run oslo-html-generator
        id: run-html-generator
        run: |
          npx oslo-generator-html --input webuniversum-config.json --stakeholders stakeholders.json --metadata metadata.json --specificationType ${{ steps.read-config.outputs.specificationType }} --language nl  --output index.html 2>&1 | tee html.log
          cat html.log
          cat html.log >> "$GITHUB_STEP_SUMMARY"
          if grep -i "error" html.log; then
            echo "Error found in html-generator workflow output"
            exit 1
          fi
      # Upload the artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            ./report.jsonld
            ./stakeholders.jsonld
            ./webuniversum-config.json
            ./index.html
            ./metadata.json
